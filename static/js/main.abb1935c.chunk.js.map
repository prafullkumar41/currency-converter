{"version":3,"sources":["component/currency.component.jsx","component/chart.component.jsx","App.js","index.js"],"names":["Currency","props","currency","select","onchangeCurrency","amount","onchangeAmount","type","className","onChange","value","map","curr","key","chartConfig","data","labels","datasets","label","Chart","rate","chartContainer","useRef","useState","setChartInstance","useEffect","current","newChartInstance","Chartjs","ref","App","toAmount","fromAmount","setCurrency","fromCurrency","setfromCurrency","toCurrency","settoCurrency","setAmount","amtinfromCurrency","setamtfromCurrency","exchangeRate","setexchangeRate","fetch","then","resp","json","base","Object","keys","rates","undefined","event","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abb1935c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Currency(props) {\r\n    const {\r\n        currency,\r\n        select,\r\n        onchangeCurrency,\r\n        amount,\r\n        onchangeAmount\r\n    } = props\r\n    return (\r\n        <div>\r\n            <input type='number' className='currency' onChange={onchangeAmount} value={amount}></input>\r\n                <select value={select} onChange={onchangeCurrency} className='select' >\r\n                    {\r\n                        currency.map(curr => (\r\n                        <option key={curr} value={curr}>{curr}</option>\r\n                        ))\r\n                    }\r\n                </select>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Currency;","import React, {useEffect, useState,useRef} from 'react';\r\nimport Chartjs from 'chart.js';\r\n\r\nconst chartConfig = {\r\n    type: 'bar',\r\n    data: {\r\n        labels: ['Currency'],\r\n        datasets:[\r\n          {\r\n            label:'Rate',\r\n            data:[\r\n          \r\n            ],\r\n            \r\n          }\r\n        ]\r\n    },\r\n    \r\n  };\r\n\r\nfunction Chart (props){\r\n    const {\r\n        currency,\r\n        rate\r\n    } = props\r\n\r\n    const chartContainer = useRef(null);\r\n    const [chartInstance, setChartInstance] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (chartContainer && chartContainer.current) {\r\n            chartConfig.data.datasets[0].data[0] = rate;\r\n            chartConfig.data.labels[0] = currency;\r\n            const newChartInstance = new Chartjs(chartContainer.current, chartConfig);\r\n            setChartInstance(newChartInstance);\r\n        }\r\n      }, [props,chartContainer]);\r\n\r\n        \r\n        return(\r\n            <div className='chart'>\r\n                <canvas ref={chartContainer} />\r\n            </div>\r\n        )\r\n    \r\n  \r\n}\r\n\r\nexport default Chart;","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Currency from './component/currency.component';\nimport Chart from './component/chart.component'\n\n\nfunction App() {\n\n  const [currency, setCurrency] = useState([])\n  const [fromCurrency, setfromCurrency] = useState()\n  const [toCurrency, settoCurrency] = useState()\n  const [amount, setAmount] = useState(10)\n  const [amtinfromCurrency, setamtfromCurrency] = useState(true)\n  const [exchangeRate, setexchangeRate] = useState()\n\n  let toAmount, fromAmount\n\n  if (amtinfromCurrency) {\n    fromAmount = amount\n    toAmount = amount * exchangeRate\n  }else{\n    toAmount = amount\n    fromAmount = amount / exchangeRate\n  }\n\n  useEffect(() => {\n    fetch('https://api.ratesapi.io/api/latest')\n    .then(resp => resp.json())\n    .then(curr => {\n        setCurrency([curr.base, ...Object.keys(curr.rates)])\n        setfromCurrency(curr.base)\n        settoCurrency(Object.keys(curr.rates)[0])\n        setexchangeRate(curr.rates[Object.keys(curr.rates)[0]])\n    })\n  },[])\n\n  useEffect(() => {\n    if(fromCurrency !== undefined &&\n      toCurrency !== undefined &&\n      fromCurrency === toCurrency){\n        setexchangeRate(1);\n        return;\n      }\n\n    if (fromCurrency != null && toCurrency){\n\n      fetch(`https://api.ratesapi.io/api/latest?base=${fromCurrency}&symbols=${toCurrency}`)\n      .then(resp => resp.json())\n      .then(data => setexchangeRate(data.rates[toCurrency]))\n    }\n\n  },[fromCurrency,toCurrency])\n\n  function handleFromAmtChange(event) {\n    setAmount(event.target.value)\n    setamtfromCurrency(true)\n  }\n\n  function handleToAmtChange(event) {\n    setAmount(event.target.value)\n    setamtfromCurrency(false)\n  }\n\n\n  return (\n  <div> \n    <h1><b>CURRENCY CONVERTER</b></h1>\n    <Currency currency={currency} \n        select={fromCurrency}\n        onchangeCurrency={event => setfromCurrency(event.target.value) }\n        amount = {fromAmount}\n        onchangeAmount={handleFromAmtChange}\n        />\n    <br/>\n    <Currency currency={currency} \n        select={toCurrency}\n        onchangeCurrency={event => settoCurrency(event.target.value) }\n        amount = {toAmount}\n        onchangeAmount={handleToAmtChange}\n\n        />\n     <br/>\n     <br/>\n     <h3>Exchange Rate: {exchangeRate}</h3>\n     <Chart currency={fromCurrency} rate={exchangeRate}/>   \n  </div> \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}